{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/external \"react\"","webpack://[name]/external \"prop-types\"","webpack://[name]/external \"classnames\"","webpack://[name]/external \"@material-ui/core/styles\"","webpack://[name]/external \"ramda\"","webpack://[name]/external \"fast-memoize\"","webpack://[name]/external \"@material-ui/core/ListItem\"","webpack://[name]/external \"@material-ui/core/ListItemText\"","webpack://[name]/external \"@material-ui/core/Typography\"","webpack://[name]/external \"@material-ui/core/ExpansionPanel\"","webpack://[name]/external \"@material-ui/core/ExpansionPanelDetails\"","webpack://[name]/external \"@material-ui/core/ExpansionPanelSummary\"","webpack://[name]/external \"@material-ui/icons/KeyboardArrowDown\"","webpack://[name]/./src/components/MuiTreeView/index.jsx"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","pickClassName","prop","tree","string","isRequired","href","id","oneOfType","number","assign","nodes","arrayOf","shape","ExpansionPanel","withStyles","opacity","margin","expanded","MuiExpansionPanel","useStyles","makeStyles","theme","panel","width","paddingRight","paddingLeft","panelSummary","padding","spacing","marginLeft","panelDetails","display","text","overflow","textOverflow","whiteSpace","maxWidth","listItemTextDense","MuiTreeView","props","useTheme","classes","unit","searchTerm","softSearch","caseSensitiveSearch","onEmptySearch","isLeafNode","node","length","getNodeValue","filter","isLeaf","RegExp","test","subtree","Boolean","createFilteredTree","memoize","serializer","JSON","stringify","renderNode","parent","depth","haltSearch","Link","onLeafClick","onParentClick","expansionPanelSummaryProps","expansionPanelDetailsProps","listItemProps","rest","getNodeId","getNodeHref","textIndent","searchRegExp","shouldHaltSearch","Error","disableGutters","style","onClick","leaf","button","component","to","className","classNames","primary","elevation","IconButtonProps","edge","expandIcon","handleParentClick","map","graph","defaultProps"],"mappings":"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","file":"MuiTreeView.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"MuiTreeView\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MuiTreeView\"] = factory();\n\telse\n\t\troot[\"MuiTreeView\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","module.exports = require(\"react\");","module.exports = require(\"prop-types\");","module.exports = require(\"classnames\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"ramda\");","module.exports = require(\"fast-memoize\");","module.exports = require(\"@material-ui/core/ListItem\");","module.exports = require(\"@material-ui/core/ListItemText\");","module.exports = require(\"@material-ui/core/Typography\");","module.exports = require(\"@material-ui/core/ExpansionPanel\");","module.exports = require(\"@material-ui/core/ExpansionPanelDetails\");","module.exports = require(\"@material-ui/core/ExpansionPanelSummary\");","module.exports = require(\"@material-ui/icons/KeyboardArrowDown\");","import React from 'react';\nimport {\n  arrayOf,\n  bool,\n  shape,\n  number,\n  string,\n  func,\n  oneOfType,\n  object,\n  node,\n} from 'prop-types';\nimport classNames from 'classnames';\nimport { prop } from 'ramda';\nimport memoize from 'fast-memoize';\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\n\nconst pickClassName = prop('className');\n/** Prop-type for a recursive data structure */\nconst tree = {\n  // The node value.\n  value: string.isRequired,\n  /**\n   * A string representation of the location to link to.\n   * Only use this property on a leaf node.\n   * This value will be fed directly to the\n   * [Link](https://github.com/ReactTraining/react-router/blob/master/packages/react-router-dom/docs/api/Link.md)\n   * component of `react-router-dom`.\n   * */\n  href: string,\n  // Optional node ID. Useful for when the node value is not unique.\n  id: oneOfType([string, number]),\n};\n\nObject.assign(tree, {\n  nodes: arrayOf(oneOfType([shape(tree), string])),\n});\n\nconst ExpansionPanel = withStyles({\n  root: {\n    '&:before': {\n      opacity: 0,\n    },\n    '&$expanded': {\n      margin: 0,\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\nconst useStyles = makeStyles(theme => ({\n  panel: {\n    width: '100%',\n    paddingRight: 0,\n    paddingLeft: 0,\n  },\n  panelSummary: {\n    padding: 0,\n    paddingRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n  },\n  panelDetails: {\n    padding: 0,\n    display: 'block',\n  },\n  text: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'noWrap',\n    maxWidth: '75vw',\n  },\n  listItemTextDense: {\n    margin: 0,\n  },\n}));\n\n/**\n * Render a tree view.\n */\nfunction MuiTreeView(props) {\n  const theme = useTheme();\n  const classes = useStyles();\n  const unit = theme.spacing(1);\n  const {\n    tree,\n    searchTerm,\n    softSearch,\n    caseSensitiveSearch,\n    onEmptySearch,\n  } = props;\n  const handleLeafClick = leaf => {\n    if (props.onLeafClick) {\n      props.onLeafClick(leaf);\n    }\n  };\n\n  const handleParentClick = parent => {\n    if (props.onParentClick) {\n      props.onParentClick(parent);\n    }\n  };\n\n  const isLeafNode = node => {\n    return typeof node === 'string' || !node.nodes || !node.nodes.length;\n  };\n\n  const getNodeValue = node => {\n    return typeof node === 'string' ? node : node.value;\n  };\n\n  const getNodeId = node => {\n    if (typeof node === 'object') {\n      return node.id;\n    }\n  };\n\n  const getNodeHref = node => {\n    if (typeof node === 'object') {\n      return node.href;\n    }\n  };\n\n  const filter = tree => {\n    return tree.filter(node => {\n      const value = getNodeValue(node);\n      const isLeaf = isLeafNode(node);\n      const searchRegExp = caseSensitiveSearch\n        ? RegExp(searchTerm)\n        : RegExp(searchTerm, 'i');\n\n      if (searchRegExp.test(value)) {\n        return true;\n      }\n\n      if (isLeaf) {\n        return false;\n      }\n\n      const subtree = filter(node.nodes);\n\n      return Boolean(subtree.length);\n    });\n  };\n\n  const createFilteredTree = memoize(\n    (tree, searchTerm) => (searchTerm ? filter(tree) : tree),\n    {\n      serializer: ([tree, searchTerm, softSearch]) =>\n        `${JSON.stringify(tree)}-${searchTerm}-${softSearch}`,\n    }\n  );\n  const renderNode = ({ node, parent, depth = 0, haltSearch }) => {\n    const {\n      searchTerm,\n      softSearch,\n      onLeafClick: _,\n      onParentClick: __,\n      onEmptySearch: ___,\n      Link,\n      expansionPanelSummaryProps,\n      expansionPanelDetailsProps,\n      listItemProps,\n      caseSensitiveSearch,\n      ...rest\n    } = props;\n    const value = getNodeValue(node);\n    const id = getNodeId(node);\n    const isLeaf = isLeafNode(node);\n    const href = isLeaf ? getNodeHref(node) : null;\n    const textIndent = isLeaf\n      ? depth * unit + unit + (parent ? unit : 0)\n      : unit * depth + unit;\n    const searchRegExp = caseSensitiveSearch\n      ? RegExp(searchTerm)\n      : RegExp(searchTerm, 'i');\n    const shouldHaltSearch =\n      softSearch && searchTerm ? searchRegExp.test(value) : false;\n\n    if (!haltSearch && isLeaf && searchTerm && !searchRegExp.test(value)) {\n      return null;\n    }\n\n    if (!Link && isLeaf && href) {\n      throw new Error(\n        'A Link prop is required when a leaf node has an href specified.'\n      );\n    }\n\n    if (isLeaf) {\n      return (\n        <ListItem\n          disableGutters\n          style={{ textIndent }}\n          key={typeof id !== 'undefined' ? id : value}\n          id={value}\n          value={value}\n          onClick={() => handleLeafClick({ ...node, value, parent, id })}\n          button\n          {...(href\n            ? {\n                component: Link,\n                to: href,\n              }\n            : null)}\n          {...listItemProps}>\n          <ListItemText\n            className={classNames(classes.text, classes.listItemTextDense)}\n            primary={value}\n          />\n        </ListItem>\n      );\n    }\n\n    return (\n      <ExpansionPanel\n        style={{ textIndent }}\n        key={node.id || node.value}\n        elevation={0}\n        {...rest}\n        className={classNames(classes.panel, pickClassName(rest))}>\n        <ExpansionPanelSummary\n          classes={{ root: classes.panelSummary }}\n          IconButtonProps={{ edge: 'start' }}\n          {...expansionPanelSummaryProps}\n          className={classNames(pickClassName(expansionPanelSummaryProps))}\n          expandIcon={<KeyboardArrowDown />}\n          onClick={() => handleParentClick({ ...node, value, parent, id })}>\n          <Typography className={classes.text}>{node.value}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails\n          {...expansionPanelDetailsProps}\n          classes={{ root: classes.panelDetails }}\n          className={classNames(pickClassName(expansionPanelDetailsProps))}>\n          {node.nodes.map(l =>\n            renderNode({\n              node: l,\n              parent: node,\n              depth: depth + 1,\n              haltSearch: shouldHaltSearch,\n            })\n          )}\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    );\n  };\n\n  const graph = createFilteredTree(tree, searchTerm, softSearch);\n\n  if (!graph.length && onEmptySearch) {\n    return onEmptySearch;\n  }\n\n  return graph.map(node =>\n    renderNode({ node, parent: null, haltSearch: false })\n  );\n}\n\nMuiTreeView.propTypes = {\n  /** The data to render as a tree view */\n  tree: arrayOf(shape(tree)).isRequired,\n  /** Callback function fired when a tree leaf is clicked. */\n  onLeafClick: func,\n  /** Callback function fired when a tree node is clicked. */\n  onParentClick: func,\n  /** A search term to refine the tree */\n  searchTerm: string,\n  /**\n   * Given a `searchTerm`, a subtree will be shown if any parent node\n   * higher up in the tree matches the search term. Defaults to false.\n   * */\n  softSearch: bool,\n  /** Properties applied to the ExpansionPanelSummary element. */\n  expansionPanelSummaryProps: object,\n  /** Properties applied to the ExpansionPanelDetails element. */\n  expansionPanelDetailsProps: object,\n  /** Properties applied to the ListItem element. */\n  listItemProps: object,\n  /** If true, search is case sensitive. Defaults to false. */\n  caseSensitiveSearch: bool,\n  /** Node to render when searchTerm is provided but the search filter\n   *  returns no result. */\n  onEmptySearch: node,\n  /**\n   * A React Router Link node to use. Required when a leaf node\n   * has an href value.\n   * */\n  Link: node,\n};\n\nMuiTreeView.defaultProps = {\n  searchTerm: null,\n  softSearch: false,\n  onLeafClick: null,\n  onParentClick: null,\n  expansionPanelSummaryProps: null,\n  expansionPanelDetailsProps: null,\n  listItemProps: null,\n  caseSensitiveSearch: false,\n  onEmptySearch: null,\n  Link: null,\n};\n\nexport default MuiTreeView;\n"],"sourceRoot":""}