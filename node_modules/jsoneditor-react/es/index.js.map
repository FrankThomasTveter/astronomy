{"version":3,"file":"index.js","sources":["../src/Editor.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport JSONEditor from 'jsoneditor/dist/jsoneditor-minimalist';\nimport 'jsoneditor/dist/jsoneditor.css';\nimport './fixAce.css';\n\n/**\n * @typedef {{\n * tree: string,\n * view: string,\n * form: string,\n * code: string,\n * text: string,\n * allValues: Array<string>\n * }} TJsonEditorModes\n */\nconst modes = {\n    tree: 'tree',\n    view: 'view',\n    form: 'form',\n    code: 'code',\n    text: 'text'\n};\n\nconst values = Object.values(modes);\n\nmodes.allValues = values;\n\n/**\n * @type {object}\n * @property {object} [value]\n * @property {string} [mode='tree'] - Set the editor mode.\n * @property {string} [name=undefined] - Initial field name for the root node\n * @property {object} [schema] - Validate the JSON object against a JSON schema.\n * @property {object} [schemaRefs] - Schemas that are referenced using\n * the $ref property\n * @property {Function} [onChange] - Set a callback function\n * triggered when json in the JSONEditor change.\n * Will only be triggered on changes made by the user.\n * @property {Function} [onError] - Set a callback function triggered when an error occurs.\n * Invoked with the error as first argument.\n * The callback is only invoked for errors triggered by a users action,\n * like switching from code mode to tree mode or clicking\n * the Format button whilst the editor doesn't contain valid JSON.\n * @property {Function} [onModeChange] - Set a callback function\n * triggered right after the mode is changed by the user.\n * @property {object} [ace] - Provide a version of the Ace editor.\n * Only applicable when mode is code\n * @property {object} [ajv] - Provide a instance of ajv,\n * the library used for JSON schema validation.\n * @property {string} [theme] - Set the Ace editor theme,\n * uses included 'ace/theme/jsoneditor' by default.\n * @property {boolean} [history=false] - Enables history,\n * adds a button Undo and Redo to the menu of the JSONEditor. Only applicable when\n * mode is 'tree' or 'form'\n * @property {boolean} [navigationBar=true] - Adds navigation bar to the menu\n * the navigation bar visualize the current position on the\n * tree structure as well as allows breadcrumbs navigation.\n * @property {boolean} [statusBar=true] - Adds status bar to the buttom of the editor\n * the status bar shows the cursor position and a count of the selected characters.\n * Only applicable when mode is 'code' or 'text'.\n * @property {boolean} [search=true] - Enables a search box in\n * the upper right corner of the JSONEditor.\n * @property {Array<string>} [allowedModes] - Create a box in the editor menu where\n * the user can switch between the specified modes.\n * @property {(string|PropTypes.elementType)} [tag='div'] - Html element, or react element to render\n * @property {object} [htmlElementProps] - html element custom props\n * @property {Function} [innerRef] - callback to get html element reference\n * @property {boolean} [sortObjectKeys=false] If true, object keys in 'tree',\n * 'view' or 'form' mode list be listed alphabetically instead by their insertion order..\n */\nexport default class Editor extends Component {\n    constructor(props) {\n        super(props);\n\n        this.htmlElementRef = null;\n        this.jsonEditor = null;\n\n        this.handleChange = this.handleChange.bind(this);\n        this.setRef = this.setRef.bind(this);\n        this.collapseAll = this.collapseAll.bind(this);\n        this.expandAll = this.expandAll.bind(this);\n        this.focus = this.focus.bind(this);\n    }\n\n    componentDidMount() {\n        const {\n            allowedModes,\n            innerRef,\n            htmlElementProps,\n            tag,\n            onChange,\n            ...rest\n        } = this.props;\n\n        this.createEditor({\n            ...rest,\n            modes: allowedModes\n        });\n    }\n\n    // eslint-disable-next-line react/sort-comp\n    componentDidUpdate({\n        allowedModes,\n        schema,\n        name,\n        theme,\n        schemaRefs,\n        innerRef,\n        htmlElementProps,\n        tag,\n        onChange,\n        ...rest\n    }) {\n        if (this.jsonEditor) {\n            if (theme !== this.props.theme) {\n                this.createEditor({\n                    ...rest,\n                    theme,\n                    modes: allowedModes\n                });\n            } else {\n                if (schema !== this.props.schema\n                    || schemaRefs !== this.props.schemaRefs\n                ) {\n                    this.jsonEditor.setSchema(schema, schemaRefs);\n                }\n\n                if (name !== this.jsonEditor.getName()) {\n                    this.jsonEditor.setName(name);\n                }\n            }\n        }\n    }\n\n    shouldComponentUpdate({ htmlElementProps }) {\n        return htmlElementProps !== this.props.htmlElementProps;\n    }\n\n    componentWillUnmount() {\n        if (this.jsonEditor) {\n            this.jsonEditor.destroy();\n            this.jsonEditor = null;\n        }\n    }\n\n    setRef(element) {\n        this.htmlElementRef = element;\n        if (this.props.innerRef) {\n            this.props.innerRef(element);\n        }\n    }\n\n    createEditor({ value, ...rest }) {\n        if (this.jsonEditor) {\n            this.jsonEditor.destroy();\n        }\n\n        this.jsonEditor = new JSONEditor(this.htmlElementRef, {\n            onChange: this.handleChange,\n            ...rest\n        });\n\n        this.jsonEditor.set(value);\n    }\n\n    handleChange() {\n        if (this.props.onChange) {\n            try {\n                this.err = null;\n                const text = this.jsonEditor.getText();\n                if (text === '') {\n                    this.props.onChange(null);\n                }\n\n                const currentJson = this.jsonEditor.get();\n                if (this.props.value !== currentJson) {\n                    this.props.onChange(currentJson);\n                }\n            } catch (err) {\n                this.err = err;\n            }\n        }\n    }\n\n    collapseAll() {\n        if (this.jsonEditor) {\n            this.jsonEditor.collapseAll();\n        }\n    }\n\n    expandAll() {\n        if (this.jsonEditor) {\n            this.jsonEditor.expandAll();\n        }\n    }\n\n    focus() {\n        if (this.jsonEditor) {\n            this.jsonEditor.focus();\n        }\n    }\n\n    render() {\n        const {\n            htmlElementProps,\n            tag\n        } = this.props;\n\n        return React.createElement(\n            tag,\n            {\n                ...htmlElementProps,\n                ref: this.setRef\n            }\n        );\n    }\n}\n\nEditor.propTypes = {\n    //  jsoneditor props\n    value: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.number,\n    ]),\n    mode: PropTypes.oneOf(values),\n    name: PropTypes.string,\n    schema: PropTypes.object,\n    schemaRefs: PropTypes.object,\n    sortObjectKeys: PropTypes.bool,\n\n    onChange: PropTypes.func,\n    onError: PropTypes.func,\n    onModeChange: PropTypes.func,\n\n    ace: PropTypes.object,\n    ajv: PropTypes.object,\n    theme: PropTypes.string,\n    history: PropTypes.bool,\n    navigationBar: PropTypes.bool,\n    statusBar: PropTypes.bool,\n    search: PropTypes.bool,\n    allowedModes: PropTypes.arrayOf(PropTypes.oneOf(values)),\n\n    //  custom props\n    tag: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n    htmlElementProps: PropTypes.object,\n    innerRef: PropTypes.func,\n};\n\nEditor.defaultProps = {\n    tag: 'div',\n    mode: modes.tree,\n    history: false,\n    search: true,\n    navigationBar: true,\n    statusBar: true,\n    sortObjectKeys: false,\n};\n\n/**\n * @type TJsonEditorModes\n */\nEditor.modes = modes;\n"],"names":["modes","tree","view","form","code","text","values","Object","allValues","Editor","props","htmlElementRef","jsonEditor","handleChange","bind","setRef","collapseAll","expandAll","focus","allowedModes","innerRef","htmlElementProps","tag","onChange","rest","createEditor","schema","name","theme","schemaRefs","setSchema","getName","setName","destroy","element","value","JSONEditor","set","err","getText","currentJson","get","React","createElement","ref","Component","propTypes","PropTypes","oneOfType","object","array","string","bool","number","mode","oneOf","sortObjectKeys","func","onError","onModeChange","ace","ajv","history","navigationBar","statusBar","search","arrayOf","elementType","defaultProps"],"mappings":"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"}